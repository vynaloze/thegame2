package com.vynaloze.thegame2.core.engine

import com.vynaloze.thegame2.core.content.trait.Vulnerable
import com.vynaloze.thegame2.core.engine.exception.ThingIsAlreadyDeadException
import com.vynaloze.thegame2.core.content.property.Health
import com.vynaloze.thegame2.core.linker.Linker


abstract class VulnerabilityEngine(private val linker: Linker) : Vulnerable {
    override fun damage(health: Health) {
        if (this.isDead()) {
            throw ThingIsAlreadyDeadException("thing $this is already dead")
        }
        this.health.decrease(health)
        if (this.isDead()) {
            this.linker.removeThing(this.container)
        }
    }

    override fun restore(health: Health) {
        if (this.isDead()) {
            throw ThingIsAlreadyDeadException("thing $this is already dead")
        }
        this.health.increase(health)
    }

    override fun isDead(): Boolean {
        return this.health.isDepleted()
    }
}